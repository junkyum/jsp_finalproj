<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tboard">
<!--  1111  만들 세가지 -->

<!-- tboard  테이블의  num 컬럼의 최대값 -->
<select id="maxNum" resultType="Integer" >
	select NVL(max(num), 0) from tboard
</select>

<!-- 게시글 생성 -->
<insert id="insertTBoard" parameterType="com.sp.tboard.TBoard">
	insert into tboard (num, userId, subject, content)  
         values ( #{num}, #{userId}, #{subject}, #{content})
</insert>


<insert id="insertTBoardFile">
	insert into tboardFile(fileNum, num, userId, saveFilename, originalFilename, fileSize)
		 values ( tboardFile_seq.NEXTVAL, #{num}, #{userId}, #{saveFilename}, #{originalFilename}, #{fileSize})

</insert>

<sql id="where-list">
	<if test="searchKey=='subject'">
		DBMS_LOB.INSTR(subject, #{searchValue}) =1
	</if>
	<if test="searchKey=='content'">
		DBMS_LOB.INSTR(content, #{searchValue}) =1
	</if>
	<if test="searchKey=='created'">
		to_char(created, 'YYYY-MM-DD') = #{searchValue}
	</if>
</sql>

<select id="dataCount" parameterType="map" resultType="Integer">
	SELECT NVL(COUNT(num), 0) FROM tboard
	<where>
		<if test="searchValue != null and searchValue !='' ">
			<include refid="where-list" />
		</if>
	</where>
</select>


<select id="listTBoard" parameterType="map" resultType="com.sp.tboard.TBoard">
SELECT * FROM (
			SELECT ROWNUM rnum, tb.* FROM (
 				select num, b.userId, m.userName, subject, hitCount, created
  					from tboard b
  					join member m on b.userId = m.userId
	<where>
		<if test="searchValue != null and searchValue !='' ">
			<include refid="where-list" />
		</if>
	</where>
				ORDER BY num DESC
	<![CDATA[                
            ) tb WHERE ROWNUM <= #{end}
        ) WHERE rnum >= #{start}
	]]>
</select>

<update id="updateHitCount" parameterType="Integer">
		update tboard set hitCount=hitCount+1
		where num = #{num}
</update>
	
<select id="readTBoard" resultType="com.sp.tboard.TBoard" parameterType="Integer">
	select b.num, b.userId, userName, subject, content, hitCount, created, nvl(tlikeCount,0) tlikeCount
  		from tboard b
  		join member m on b.userId = m.userId
  		left outer join
  		(
  			SELECT num,NVL(COUNT(DECODE(tboardLike,1,1)),0) tlikeCount from tBoardLike group by num
  		) c on b.num = c.num
  		where b.num =#{num}
</select>

<select id="preReadTBoard" resultType="com.sp.tboard.TBoard" parameterType="map">
		select tb.* from (
		  select num, subject from tboard
		  <where>
		  	<if test="searchValue!= null and searchValue !=''">
		  		<include refid="where-list"/>
		  	</if>
		  	<![CDATA[
		  		and (num > #{num})
		  	]]>
		  </where>
		  order by num ASC
		) tb where ROWNUM=1
	</select>
	
	<select id="nextReadTBoard" resultType="com.sp.tboard.TBoard" parameterType="map">
		select tb.* from (
		  select num, subject from tboard
		  <where>
		  	<if test="searchValue!= null and searchValue !=''">
		  		<include refid="where-list"/>
		  	</if>
		  	<![CDATA[
		  		and (num < #{num})
		  	]]>
		  </where>
		  order by num DESC
		) tb where ROWNUM=1
	</select>





<select id="listFile" resultType="com.sp.tboard.TBoard" parameterType="Integer">
	select num, fileNum, userId, saveFilename, originalFilename, fileSize
	 from tboardFile
	  where num =#{num}
</select>

<select id="readFile" parameterType="Integer" resultType="com.sp.tboard.TBoard">
	SELECT  fileNum, num, saveFilename, 
	 originalFilename, fileSize
	  FROM tboardFile WHERE fileNum=#{fileNum}      
</select>
	
	
	
	
<update id="updateTBoard" parameterType="com.sp.tboard.TBoard">
	UPDATE tboard SET subject=#{subject},
	  content=#{content}
	   WHERE num=#{num}
</update>
    
<delete id="deleteTBoard" parameterType="Integer">
	DELETE FROM tboard WHERE num=#{num}
</delete>
	
<delete id="deleteFile" parameterType="map">
	DELETE FROM tboardFile WHERE ${field} = #{num}
</delete>


<insert id="insertReply" parameterType="com.sp.tboard.Reply">
	  INSERT INTO tboardReple(repleNum,num,userId,content,answer)
	  VALUES (tboardReple_seq.NEXTVAL, #{num},#{userId},#{content},#{answer})
	</insert>
	
	<select id="replyDateCount" resultType="Integer" parameterType="map">
	 SELECT NVL(COUNT(*),0) FROM tboardReple WHERE num=#{num} AND answer =0
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.sp.tboard.Reply">
	
	SELECT * FROM (
	 SELECT ROWNUM rnum, tb. * FROM(
	   SELECT tbreple.repleNum, num, userId, userName, content, created, tbreple.answer
	        ,NVL(answerCount, 0) answerCount,NVL(likeCount,0) likeCount, NVL(disLikeCount,0) disLikeCount
	        FROM
	        (
	        		(
	        			SELECT repleNum, r.num, r.userId, userName, r.content, r.created, answer
	        				FROM tboardReple r
	        				JOIN tboard p ON r.num=p.num
	        				JOIN member m ON r.userId= m.userId
	        				WHERE r.num=#{num} AND answer=0
	        		)tbreple
	        		LEFT OUTER JOIN
	        		(
	        				SELECT answer, COUNT(*) answerCount
	        		FROM tboardreple GROUP BY answer
	        		) tbanswer ON tbreple.repleNum = tbanswer.answer
	        		LEFT OUTER JOIN
	        		(
	        			SELECT repleNum,
	        			  COUNT(DECODE(repleLike,1,1)) likeCount,
	        			  COUNT(DECODE(repleLike,0,1)) disLikeCount
	        		FROM tboardRepleLike GROUP BY repleNum	  
	        		) tblike ON tbreple.repleNum = tblike.repleNum
	        		
	        )
			ORDER BY repleNum DESC
			<![CDATA[
	        ) tb WHERE ROWNUM <= #{end}
	    ) WHERE rnum >= #{start}
			]]>
	
	</select>
	
	<select id="listReplyAnswer" resultType="com.sp.tboard.Reply" parameterType="Integer">
	SELECT repleNum, num, tbreple.userId, userName,content,created, answer
	FROM tboardReple tbreple
	JOIN member m ON tbreple.userId= m.userId
	WHERE answer=#{answer}
	ORDER BY repleNum DESC
	</select>
	 
	 <select id="replyCountAnswer" parameterType="Integer" resultType="Integer">
	  SELECT NVL(COUNT(*), 0)
	        FROM tboardReple WHERE answer=#{answer}
	</select>
	
	
	
	 <delete id="deleteReply" parameterType="map">
	DELETE tboardReple WHERE
	    <if test="mode == 'num' ">
			 num=#{num}
		</if>
	    <if test="mode == 'reply' ">
			 repleNum IN 
               (SELECT repleNum FROM tboardReple START WITH  repleNum = #{repleNum}
	            CONNECT BY PRIOR repleNum = answer)
		</if>
	    <if test="mode == 'answer' ">
			 repleNum=#{repleNum}
		</if>
	</delete>
	 
	<insert id="insertReplyLike" parameterType="com.sp.tboard.Reply">
	INSERT INTO tboardRepleLike(repleNum, userId, repleLike)
	   VALUES (#{repleNum}, #{userId}, #{repleLike})
	</insert>

	<select id="replyCountLike" resultType="map" 
	           parameterType="Integer">
	   SELECT  NVL(COUNT(DECODE(repleLike, 1, 1)), 0) likeCount,
			        NVL(COUNT(DECODE(repleLike, 0, 1)), 0) disLikeCount
	        FROM tboardRepleLike WHERE repleNum=#{repleNum}
	</select> 
	
	<insert id="insertBoardLike" parameterType="com.sp.tboard.TBoard">
	INSERT INTO tBoardLike(num,userId,tBoardLike)
	VALUES (#{num},#{userId},#{tBoardLike})
	</insert>
	
	<select id="tcountLike" resultType="map" parameterType="Integer">
	 SELECT NVL(COUNT(DECODE(tboardLike,1,1)),0) tlikeCount,
	 NVL(COUNT(DECODE(tboardLike,0,1)),0) tdisLikeCount
	 FROM tboardLike WHERE num=#{num}
	
	</select>





</mapper>